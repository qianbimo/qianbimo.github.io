<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C-Day11</title>
      <link href="/2022/09/13/C-Day11/"/>
      <url>/2022/09/13/C-Day11/</url>
      
        <content type="html"><![CDATA[<h1 id="分支语句和循环语句"><a href="#分支语句和循环语句" class="headerlink" title="分支语句和循环语句"></a>分支语句和循环语句</h1><p>C语言是结构化的程序设计语言有<strong>顺序结构，选择结构，循环结构</strong>三种结构</p><blockquote><p>分支语句</p></blockquote><ul><li>if</li><li>switch</li></ul><blockquote><p>循环语句</p></blockquote><ul><li>while</li><li>for</li><li>do while</li></ul><blockquote><p>goto语句</p></blockquote><p><strong>什么是语句？</strong></p><p>C语言中由一个分号隔开的句子，就是一个语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ;<span class="comment">//空语句</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">语法结构:</span><br><span class="line"><span class="keyword">if</span>(表达式)</span><br><span class="line">    语句; <span class="comment">//一个语句不用大括号，多个语句需要大括号，形成一个代码块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(表达式)</span><br><span class="line">    语句<span class="number">1</span>；</span><br><span class="line"><span class="keyword">else</span>(表达式)</span><br><span class="line">    语句<span class="number">2</span>；</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(表达式)</span><br><span class="line">    语句<span class="number">1</span>；</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(表达式)</span><br><span class="line">    语句<span class="number">2</span>；</span><br><span class="line"><span class="keyword">else</span>(表达式)</span><br><span class="line">    语句<span class="number">3</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (age&gt;=<span class="number">18</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;成年\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来一个例子，看看会暑促和什么</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">60</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;少年n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">18</span>&lt;= age &lt; <span class="number">26</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 结果输出是<code>青年</code>，那么为什么呢？因为这个写法是<strong>错误</strong>的</p><p>来看一下<code>else if</code>的表达式，已经设定<code>age</code>的值为<code>60</code>，因此<code>18&lt;=age</code> 为真，变成<code>1</code>，接着又是<code>&lt;26</code>这个表达式，<code>1&lt;26</code>为真，所以输出<code>else if</code>的语句，所以输出的是<code>青年</code>，而不为<strong>空</strong></p><p>正确的写法应该是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">60</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;少年n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;&amp; age &lt; <span class="number">26</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此if语句的操作逻辑是：<strong>如果表达式的结果为真，则语句执行</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b =<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="number">2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>)；</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;haha\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是不打印，那么是为什么呢？</p><p>乍一看以为第一个<code>if</code>和<code>else</code>对上，表达式不成立，直接看<code>else</code>，应该是<code>haha</code>啊，但是<strong>else是与它最近的if配对</strong>的，第一个if不成立，导致它管理的语句也不会执行，因此不会进行打印</p><p>当你遇到这种写代码的人，就可以拉出去**<del>枪毙</del>**了</p><p>优化后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b =<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>)；</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;haha\n&quot;</span>);、</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以<strong>代码风格</strong>很重要</p><p>来点小练习</p><h3 id="判断一个数是不是奇数"><a href="#判断一个数是不是奇数" class="headerlink" title="判断一个数是不是奇数"></a>判断一个数是不是奇数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">15</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( num %<span class="number">2</span> ==<span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;奇数\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;偶数\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出1-100之间的奇数"><a href="#输出1-100之间的奇数" class="headerlink" title="输出1-100之间的奇数"></a>输出1-100之间的奇数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( i % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p><code>switch</code>语句也是一种分支语句，常常用于多分支的情况</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(整型表达式)</span><br><span class="line">&#123;</span><br><span class="line">        语句项;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是语句项是什么呢</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//是一些case语句</span></span><br><span class="line"><span class="comment">//如下:</span></span><br><span class="line"><span class="keyword">case</span> 整型常量表达式：</span><br><span class="line">    语句;</span><br></pre></td></tr></table></figure><p>来个例子感受一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;day);</span><br><span class="line">    <span class="keyword">switch</span> (day)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期一\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//break 跳出循环</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期二\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期三\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期四\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期五\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期六\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是1-5工作日，67休息日呢？就可以这样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;day);</span><br><span class="line">    <span class="keyword">switch</span> (day)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><p>实际效果是把语句列表划分为不同的部分</p><p>但是上述的例子输入别的值时没有反馈，应该怎么办呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;day);</span><br><span class="line">    <span class="keyword">switch</span> (day)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//default 没有顺序，可以穿插在case语句中  </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>与if语句十分相似</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>while的用法呢</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//while 语法结构</span></span><br><span class="line"><span class="keyword">while</span>(表达式) <span class="comment">//非0会一直进入循环</span></span><br><span class="line">    循环语句:</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很好你现在进入了无限死循环</p><h3 id="试着用while语句打印出1-10的数字"><a href="#试着用while语句打印出1-10的数字" class="headerlink" title="试着用while语句打印出1-10的数字"></a>试着用while语句打印出1-10的数字</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">            i++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>while循环</code>中，<code>break</code>只要被<strong>触发</strong>就会<strong>永久的终止循环</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">            i++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是 1 2 3 4</p><p>那么我想让代码继续跑下去呢？那首先想到的肯定是<code>continue</code>，那写一个试试看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">            i++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果很奇怪，只有1 2 3 4 并且后面的光标还在闪烁，说明程序还在运行，也就是进入了死循环</p><p>因为在<code>while循环</code>中，<code>continue</code>的作用是跳过<strong>本次循环<code>continue</code>后边的代码</strong>，直接去判断部分，看是否进行下一次循环</p><p>来看一下别的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">        <span class="built_in">putchar</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来分析一下</p><h2 id="getchar"><a href="#getchar" class="headerlink" title="getchar()"></a>getchar()</h2><p><img src="https://img1.imgtp.com/2022/09/15/WE7AVJaE.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/15/WE7AVJaE.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><img src="https://img1.imgtp.com/2022/09/15/COoZ1Lik.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/15/COoZ1Lik.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>当<code>putchar()</code>被执行时的过程</p><p><img src="https://img1.imgtp.com/2022/09/15/8nrFElPo.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/15/8nrFElPo.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = getchar();</span><br><span class="line">    <span class="comment">//printf(&quot;%c\n&quot;, ch);</span></span><br><span class="line">    <span class="built_in">putchar</span>(ch);<span class="comment">//输出一个字符，可以完全替代上面的语句</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入一个大写的A就会输出一个大写的A</p><p>已经知道了<code>putchar()</code>输出错误时会返回<code>EOF</code>（<code>end of file</code> -文件的结束标志）</p><p>那么回到原语句</p><p>跑起来之后，就可以一直输入一个字符，输出一个相同的字符，如果想要停止的话可以输入<code>ctrl + z</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C-Day10</title>
      <link href="/2022/08/26/C-Day10/"/>
      <url>/2022/08/26/C-Day10/</url>
      
        <content type="html"><![CDATA[<h1 id="初始指针"><a href="#初始指针" class="headerlink" title="初始指针"></a>初始指针</h1><blockquote><p>内存</p></blockquote><p>内存是电脑上特别重要的存储器，计算机中所有程序的运行都是在内存中进行的</p><p>所以为了有效地使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是<strong>1个字节</strong></p><p>为了能够有效的访问到内存的每个单元，就给内存单元进行了编号，这些编号被称为该<strong>内存单元的地址</strong></p><p> 内存可以类比成现实生活中的空间，如果想要找到一个地方，我们就需要知道对应的地址 </p><p> 此时有两个问题</p><blockquote><p>1.内存是怎么编号的</p><p>2.一个这样的内存单元会占用多大的空间 </p></blockquote><h2 id="1-内存是怎么编号的"><a href="#1-内存是怎么编号的" class="headerlink" title="1.内存是怎么编号的"></a>1.内存是怎么编号的</h2><p>在讨论计算机是会考虑计算机时32位还是64位</p><p>二者指的是什么意思</p><p><strong>32位 - 32根地址线 - 物理线 - 通电 - 1&#x2F;0</strong></p><p><strong>64位 - 64根地址线 - 物理线 - 通电 - 1&#x2F;0</strong></p><p>再通过电信号转换成数字信息：1和0组成的二进制序列</p><p>如果是32位</p><p><img src="https://img1.imgtp.com/2022/09/13/9jWwpLuh.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/9jWwpLuh.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>经过排列组合会有2^32次方个序列，这些序列都可以<strong>作为内存编号</strong>，而这些编号就可以被<strong>称为内存单元的地址</strong></p><h2 id="2-一个内存单元会占用多大的空间"><a href="#2-一个内存单元会占用多大的空间" class="headerlink" title="2.一个内存单元会占用多大的空间"></a>2.一个内存单元会占用多大的空间</h2><p>我们可以通过假设法来猜测下</p><p>在32位操作系统下，已知可以有<code>2的32次方</code>个内存单元 ，也就是<code>4,294,967,296</code>个，假设每个单元占用<code>1bit</code>，那么经过转换，就会占用0.5GB的内存，管理的空间就会很小，而且一个bit就给一个地址，那么占用1个byte的char就会有8个bit也就是8个地址，太过于详细</p><p>经过研究讨论后，发现一个内存单元占用<strong>1个Byte</strong>是最好不过的</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//a在内存中分配空间需要占用4个字节</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们想要知道a存储的地址时，可以选择 F10 - 调试 - 窗口 - 内存&#x2F;监视，为了方便观察可以将列改成4</p><p><img src="https://img1.imgtp.com/2022/09/13/J54xGVAr.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/J54xGVAr.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//a在内存中分配空间需要占用4个字节</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;a);<span class="comment">//%p 专门用来打印地址的//但是发现每次的打印结果都不同</span></span><br><span class="line">    <span class="type">int</span> * pa = &amp;a;<span class="comment">//pa是用来存放地址的，在C语言中pa就叫做指针变量</span></span><br><span class="line">    <span class="comment">// * 说明 pa是指针变量</span></span><br><span class="line">    <span class="comment">// int 说明pa执行的对象是int类型的</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">    <span class="type">char</span> * pc = &amp;ch;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们知道<code>a</code>的地址之后，也是为了方便以后能够快速的找到<code>a</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;</span><br><span class="line">    *pa = <span class="number">20</span>;<span class="comment">//* 解引用操作符 *pa就是通过pa里面的地址，找到a</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是20</p><p>指针变量的空间大小</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">short</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">long</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">long</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">float</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">double</span>*));</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现结果都是一样的</p><p><strong>为什么呢？</strong></p><p>因为指针是用来存放地址的，所以指针的空间大小取决于地址的存储需要多大空间</p><p>但是这个结果会因为计算机的位数<strong>不同而不同</strong></p><p>32位 32bit - 4byte - 一个地址</p><p>64位 64bit - 8byte - 一个地址</p><h1 id="初识结构体"><a href="#初识结构体" class="headerlink" title="初识结构体"></a>初识结构体</h1><p>结构体是C语言中特别重要的知识点，结构体是的C语言有能力描述复杂类型</p><p>几条狗提也可以让C语言创建新的类型出来</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个学生</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name [<span class="number">20</span>];<span class="comment">//成员变量</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个书的类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name [<span class="number">20</span>]:</span><br><span class="line">    <span class="type">int</span> age ;</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">s</span> =</span> &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">20</span> ,<span class="number">85.5</span>&#125;;<span class="comment">//结构体的创建和初始化</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1: %s %d %lf\n&quot;</span>, s.name , s.age , s.score);<span class="comment">//结构体变量.成员变量</span></span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> * <span class="title">ps</span> =</span> &amp;s;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2: %s %d %lf\n&quot;</span>, (*ps).name , (*ps).age , (*ps).score);<span class="comment">//费劲</span></span><br><span class="line">           </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3: %s %d %lf\n&quot;</span>, ps-&gt;name, ps-&gt;age, ps-&gt;score);</span><br><span class="line">    <span class="comment">//-&gt;作用: 结构体指针-&gt;成员变量名</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C-Day9</title>
      <link href="/2022/08/25/C-Day9/"/>
      <url>/2022/08/25/C-Day9/</url>
      
        <content type="html"><![CDATA[<h1 id="初识C语言关键字"><a href="#初识C语言关键字" class="headerlink" title="初识C语言关键字"></a>初识C语言关键字</h1><h2 id="C关键字注意事项"><a href="#C关键字注意事项" class="headerlink" title="C关键字注意事项"></a>C关键字注意事项</h2><p>1.只能使用C语言提供的关键字，<strong>不能自己创造关键字</strong></p><p>2.设置变量名时，不能是关键字</p><p>常见关键字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span>  <span class="keyword">break</span>   <span class="keyword">case</span>  <span class="type">char</span>  <span class="type">const</span>   <span class="keyword">continue</span>  <span class="keyword">default</span>  <span class="keyword">do</span>   <span class="type">double</span> <span class="keyword">else</span>  <span class="keyword">enum</span>   <span class="keyword">extern</span>  <span class="type">float</span>  <span class="keyword">for</span>   <span class="keyword">goto</span>  <span class="keyword">if</span>   <span class="type">int</span>   <span class="type">long</span>  <span class="keyword">register</span>    <span class="keyword">return</span>   <span class="type">short</span>  <span class="type">signed</span> <span class="keyword">sizeof</span>   <span class="type">static</span> <span class="keyword">struct</span>  <span class="keyword">switch</span>  <span class="keyword">typedef</span> <span class="keyword">union</span>  <span class="type">unsigned</span>   <span class="type">void</span>  <span class="keyword">volatile</span>  <span class="keyword">while</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> 自动</span><br><span class="line"><span class="keyword">break</span> 满足条件时跳出循环</span><br><span class="line"><span class="type">char</span>字符类型</span><br><span class="line"><span class="type">const</span>常变量</span><br><span class="line"><span class="keyword">continue</span>继续</span><br><span class="line"><span class="keyword">default</span>默认</span><br><span class="line"><span class="class"><span class="keyword">enum</span>枚举</span></span><br><span class="line"><span class="class"><span class="title">extern</span>用来申明外部符号</span></span><br><span class="line"><span class="class"><span class="title">register</span>寄存器关键字</span></span><br><span class="line"><span class="class"><span class="title">signed</span>有符号的</span></span><br><span class="line"><span class="class"><span class="title">unsigned</span>无符号的</span></span><br><span class="line"><span class="class"><span class="title">sizeof</span>大小</span></span><br><span class="line"><span class="class"><span class="title">static</span>静态修饰</span></span><br><span class="line"><span class="class"><span class="title">union</span>联合体（共用体）</span></span><br><span class="line"><span class="class"><span class="title">void</span>无 空</span></span><br><span class="line"><span class="class"><span class="title">while</span><span class="title">while</span>循环</span></span><br><span class="line"><span class="class"><span class="title">typedef</span>类型重命名</span></span><br></pre></td></tr></table></figure><h5 id="define-include-都不是关键字，他们是预处理指令"><a href="#define-include-都不是关键字，他们是预处理指令" class="headerlink" title="define include 都不是关键字，他们是预处理指令"></a><code>define</code> <code>include</code> 都不是<strong>关键字</strong>，他们是<strong>预处理指令</strong></h5><h2 id="auto"><a href="#auto" class="headerlink" title="auto"></a>auto</h2><p>auto 自动 每个局部变动都是auto修饰的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//主动创建-自动销毁 auto可省略</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="register"><a href="#register" class="headerlink" title="register"></a>register</h2><p>寄存器关键字</p><p>作用是可以将大量频繁需要使用的数据放在<strong>寄存器</strong>中，进而提升效率</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="type">int</span> num = <span class="number">100</span>; <span class="comment">//建议将num的值存放到寄存器中</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来介绍一下计算机中关于数据的存储</p><p><img src="https://img1.imgtp.com/2022/09/13/KExXfKQz.jpg" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/KExXfKQz.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h2><p>定义类型，更准确的说应该是<strong>类型重命名</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u_int;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line">    u_int num2 = <span class="number">100</span>; <span class="comment">//上下两行意思完全一致</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><h3 id="static-修饰局部变量"><a href="#static-修饰局部变量" class="headerlink" title="static 修饰局部变量"></a>static 修饰局部变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        test();</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个代码的结果是什么呢</p><p>来分析一下</p><p><img src="https://img1.imgtp.com/2022/09/13/tz6JIUam.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/tz6JIUam.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>因此结果是2 2 2 2 2 2 2 2 2 2</p><p>再看用static修饰的局部变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">1</span>; <span class="comment">//a会被保留，出范围不会被销毁</span></span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        test();</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是2 3 4 5 6 7 8 9 10 11</p><p>因此我们可以得知</p><p><strong>static 修饰局部变量，会改变该局部变量的生命周期</strong></p><p><img src="https://img1.imgtp.com/2022/09/13/dn2AyAgS.jpg" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/dn2AyAgS.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="()"></p><p>所以，static修饰的局部变量本质上是<strong>改变了变量的存储类型</strong>，进而改变了局部变量的生命周期</p><h3 id="static-修饰全局变量"><a href="#static-修饰全局变量" class="headerlink" title="static 修饰全局变量"></a>static 修饰全局变量</h3><p>再新建一个.c文件</p><p>之前提到过全局变量在整个工程中都可以被调用，那试一下在别的源文件中进行调用</p><p><img src="https://img1.imgtp.com/2022/09/13/RG0oRthm.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/09/13/RG0oRthm.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>但是发生了<strong>报错</strong>，是为什么呢？</p><p>因为static修饰的全局变量，使得这个全局变量<strong>只能</strong>在自己的所在的源文件(.c)内部可以使用，<strong>其他源文件不可用</strong></p><p><strong>那为什么只有static修饰的变量不能被调用呢？</strong></p><p>首先说一下全局变量的属性</p><p>全局变量，在其他源文件内部可以被使用，是因为全局变量具有<strong>外部链接的属性</strong></p><p>但是被static修饰之后，<strong>就变成了内部连接的属性</strong>，其他源文件就不能连接到这个静态的全局变量了</p><h3 id="static修饰函数"><a href="#static修饰函数" class="headerlink" title="static修饰函数"></a>static修饰函数</h3><p><strong>static修饰的函数也和全局变量一样</strong></p><p>static修饰函数，使得函数只能在自己所在的源文件内部使用，不能在其他源文件内部使用</p><p>本质上：<strong>static是将函数的外部连接属性变成了内部连接属性，与static修饰的全局变量一样</strong></p><h3 id="define-定义常量和宏"><a href="#define-定义常量和宏" class="headerlink" title="#define 定义常量和宏"></a>#define 定义常量和宏</h3><p>#define也是一种<strong>预处理指令</strong></p><p>define定义符号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 100</span></span><br></pre></td></tr></table></figure><p>define定义宏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ADD(x,y) x+y</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="number">4</span>*ADD(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果并不是4x5&#x3D;20，而是11</p><p><strong>那是为什么呢？</strong></p><p>是因为 <strong>define定义的宏是直接进行替换的</strong>，因此这个式子不是<code>4*(2+3)</code>，而是<code>4*2+3</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C-Day8</title>
      <link href="/2022/08/22/C-Day8/"/>
      <url>/2022/08/22/C-Day8/</url>
      
        <content type="html"><![CDATA[<h1 id="初始操作符2"><a href="#初始操作符2" class="headerlink" title="初始操作符2"></a>初始操作符2</h1><h2 id=""><a href="#" class="headerlink" title="~"></a>~</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~           对一个数的二进制按位取反</span><br></pre></td></tr></table></figure><p>对一个数的二进制<strong>按位取反</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ~a);<span class="comment">//按位取反</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是-1</p><p>原因是<strong>按位取反</strong>是指将把内存中的<code>0</code>和<code>1</code><strong>全部取反</strong>，并且整数在内存中储存的是<code>补码</code></p><p>拿<code>a=0</code>举例子</p><p>首先介绍一个整数的二进制表示的<code>3</code>种情况</p><p>原码：是将二进制的<strong>最高位变成符号位</strong>，最高位为0则为正，反之为负</p><p>反码：就是将原码<strong>除符号位</strong>（最高位）<strong>剩下的</strong>的0和1<strong>全部反转</strong></p><p>补码：在<strong>反码</strong>的基础上**+1**</p><p>回到例子</p><p><img src="https://img1.imgtp.com/2022/08/22/NAQkCTup.jpg" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/08/22/NAQkCTup.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><strong>PS：正整数”三码合一“</strong></p><h2 id="–-和"><a href="#–-和" class="headerlink" title="– 和 ++"></a>– 和 ++</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--          前置、后置--</span><br><span class="line">++          前置、后置++</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = ++a;<span class="comment">//前置++，先赋值后使用 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是11 11</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = a++;<span class="comment">//后置++，先使用后赋值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是10 11</p><p><strong>–与++同理</strong></p><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3.14</span>；</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方式虽然可以出结果但会报错，因为<code>a</code>原来是浮点数，强制转换会丢失浮点数之后数据</p><p><img src="https://img1.imgtp.com/2022/08/22/wMGvvwKf.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/08/22/wMGvvwKf.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>如果想要消除报错<strong>可以选择</strong>进行强制类型转换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;<span class="comment">//强制类型转换</span></span><br><span class="line">    <span class="comment">//int a = 3.14；</span></span><br><span class="line">    <span class="type">int</span> a = (<span class="type">int</span>)<span class="number">3.14</span>;<span class="comment">//可以用但不推荐</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关系操作符"><a href="#关系操作符" class="headerlink" title="关系操作符"></a>关系操作符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;=小于等于</span><br><span class="line">&gt;=大于等于</span><br><span class="line">==等于</span><br><span class="line">!=不等于</span><br></pre></td></tr></table></figure><h2 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp;逻辑与</span><br><span class="line">||逻辑或</span><br></pre></td></tr></table></figure><p>计算机的逻辑用语，与高中数学的<strong>且、或</strong>的用法一致</p><p>逻辑与 <strong>都真为真，一假全假</strong></p><p>逻辑或 <strong>都假为假，一真全真</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a&amp;&amp;b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为1</p><p>若</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> c = a&amp;&amp;b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则结果为0</p><h2 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h2><p>条件操作符也是一种<strong>三目操作符</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp1 ? exp2 : exp3</span><br></pre></td></tr></table></figure><p>使用逻辑是</p><p>当exp1<strong>成立</strong>时，exp2 进行计算，整个表达式的结果是<strong>exp2的结果</strong></p><p>当exp1<strong>不成立</strong>时，exp3进行计算，整个表达式的结果是<strong>exp3的结果</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        max = a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        max = b;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用条件操作符就可以<strong>简化</strong>成</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    max = a&gt;b ? a : b;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两者在表达效果上<strong>完全一致</strong></p><h2 id="逗号表达式"><a href="#逗号表达式" class="headerlink" title="逗号表达式"></a>逗号表达式</h2><p>顾名思义，逗号隔开的一串表达式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> d = (a=b+<span class="number">2</span>,c=a<span class="number">-4</span>,b=c+<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是3</p><p>因为逗号表达式的执行逻辑是，<strong>从左向右依次计算</strong>，整个表达式的<strong>结果</strong>就是<strong>最后一个表达式的结果</strong></p><h2 id="下引用标操作符"><a href="#下引用标操作符" class="headerlink" title="下引用标操作符"></a>下引用标操作符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, arr[<span class="number">5</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>arr[ ]中的[ ]就是下标引用操作符</p><h2 id="函数调用操作符"><a href="#函数调用操作符" class="headerlink" title="函数调用操作符"></a>函数调用操作符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>printf后的( )就是函数调用操作符</p><p>不同的是，函数调用操作符<strong>可以存在多个操作数</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>homework-Lesson-2</title>
      <link href="/2022/08/07/homework-Lesson-2/"/>
      <url>/2022/08/07/homework-Lesson-2/</url>
      
        <content type="html"><![CDATA[<h1 id="求两个数的较大值"><a href="#求两个数的较大值" class="headerlink" title="求两个数的较大值"></a>求两个数的较大值</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MAX</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x &gt; y)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1, &amp;num2);</span><br><span class="line"><span class="type">int</span> max = MAX(num1, num2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC41-你是天才吗？"><a href="#BC41-你是天才吗？" class="headerlink" title="BC41-你是天才吗？"></a><a href="https://www.nowcoder.com/practice/557cc54704bb4d56b73b62d1a5455331?tpId=107&&tqId=33322&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC41-你是天才吗？</a></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> IQ = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;IQ) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IQ &gt;= <span class="number">140</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Genius\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC32-输出学生信息"><a href="#BC32-输出学生信息" class="headerlink" title="BC32-输出学生信息"></a><a href="https://www.nowcoder.com/practice/8e94458049eb4e838f711bbd1be0045e?tpId=107&&tqId=33313&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC32-输出学生信息</a></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Name    Age    Gender\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;---------------------\n&quot;</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Jack    18     man\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC18-计算带余除法"><a href="#BC18-计算带余除法" class="headerlink" title="BC18-计算带余除法"></a><a href="">BC18-计算带余除法</a></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a / b, a % b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC17-计算表达式的值"><a href="#BC17-计算表达式的值" class="headerlink" title="BC17-计算表达式的值"></a><a href="https://www.nowcoder.com/practice/58457d27f91043edaf95b6591bb64fd6?tpId=107&&tqId=33298&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC17-计算表达式的值</a></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a / b, a % b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C-Day7</title>
      <link href="/2022/08/05/C-Day7/"/>
      <url>/2022/08/05/C-Day7/</url>
      
        <content type="html"><![CDATA[<h1 id="初识操作符"><a href="#初识操作符" class="headerlink" title="初识操作符"></a>初识操作符</h1><blockquote><p>算术操作符</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+  -  *  /  %(取余)</span><br></pre></td></tr></table></figure><blockquote><p>位移操作符</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; &lt;&lt;</span><br></pre></td></tr></table></figure><blockquote><p>位操作符</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;  ^  |</span><br></pre></td></tr></table></figure><blockquote><p>赋值操作符</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">= += -= *= /= &amp;= ^=  |=   &gt;&gt;=  &lt;&lt;=</span><br></pre></td></tr></table></figure><blockquote><p>单目操作符</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">!           逻辑反操作</span><br><span class="line">-           负值</span><br><span class="line">+           正值</span><br><span class="line">&amp;           取地址</span><br><span class="line"><span class="keyword">sizeof</span>      操作数的类型长度（以字节为单位）</span><br><span class="line">~           对一个数的二进制按位取反</span><br><span class="line">--          前置、后置--</span><br><span class="line">++          前置、后置++</span><br><span class="line">*           间接访问操作符(解引用操作符)</span><br><span class="line">(类型)       强制类型转换</span><br></pre></td></tr></table></figure><h2 id="算术操作符"><a href="#算术操作符" class="headerlink" title="算术操作符"></a>算术操作符</h2><p>算术操作符没什么好说的，就是简单的四则运算，但会有一些初学时的误区</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">9</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是<code>4</code></p><p>为什么不是4.5呢？是因为用的整型<code>int</code>吗？试着改成<code>float</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a = <span class="number">9</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是<code>4.0000</code></p><p>已经都换成了浮点数，为什么还是不行呢？</p><p>是因为<code>/</code>两边都是整数，就会进行整数除法，而两边任意一侧是小数，就会进行小数除法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a = <span class="number">9</span>/<span class="number">2.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是<code>4.5</code></p><h2 id="位移操作符"><a href="#位移操作符" class="headerlink" title="位移操作符"></a>位移操作符</h2><p>位移操作符就是将数字转化成二进制位，在进行左移右移的操作符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> b = a &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是<code>4</code></p><p>为什么呢？</p><p>是因为，1个整形，相当于4个字节，而每个字节又相当于8bit，因此<code>2</code>这个整形相当于占用了32个字节，因此2在整形中二进制位的表示是，<code>00000000000000000000000000000010</code></p><p><img src="https://img1.imgtp.com/2022/08/06/Qm1AUcBn.jpg" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/08/06/Qm1AUcBn.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>如图所示，所以结果是<code>4</code></p><h2 id="赋值操作符"><a href="#赋值操作符" class="headerlink" title="赋值操作符"></a>赋值操作符</h2><p>理解起来很简单，可以进行复合赋值，直接展示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    a = <span class="number">1</span> + <span class="number">1</span> <span class="comment">//完全等于 a += 1</span></span><br><span class="line">    <span class="comment">//以此类推</span></span><br></pre></td></tr></table></figure><p>单目操作符</p><p>单目操作符就是只需要有1个操作数的操作符，因此我们之前看到的那些就可以称为，双目操作符</p><h3 id="！逻辑反操作"><a href="#！逻辑反操作" class="headerlink" title="！逻辑反操作"></a>！逻辑反操作</h3><p><code>真变假，假变真</code></p><p>在C语言中，<code>0为假，非0为真</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, !a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，输出结果是<code>0</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, !a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为<code>1</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day6</title>
      <link href="/2022/07/29/C-Day6/"/>
      <url>/2022/07/29/C-Day6/</url>
      
        <content type="html"><![CDATA[<h1 id="初识选择语句"><a href="#初识选择语句" class="headerlink" title="初识选择语句"></a>初识选择语句</h1><p>提供选择的语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;<span class="comment">//输入的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;XD\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;欢迎来到我的blog,想要继续看嘛(1/0)&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不给你看哦o(*￣▽￣*)ブ&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;那好吧，再见了(T_T)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初识循环语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> money = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(money &lt; <span class="number">30000</span>)<span class="comment">//循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;攒钱:%d\n&quot;</span>, money);</span><br><span class="line">        money++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(money == <span class="number">30000</span>)<span class="comment">//选择</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;大成功\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初识函数"><a href="#初识函数" class="headerlink" title="初识函数"></a>初识函数</h2><p>C语言的函数感念与所学的数学基本一致，需要有表达式和未知量，从而得出一个结果</p><p>用函数之前</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1,&amp;num2);</span><br><span class="line">    <span class="type">int</span> sum = num1 + num2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用函数后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">add</span> <span class="params">(<span class="type">int</span> x , <span class="type">int</span> y)</span><span class="comment">//创建函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z= x+y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1,&amp;num2);</span><br><span class="line">    <span class="type">int</span> sum = add(num1,num2);<span class="comment">//使用函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day5</title>
      <link href="/2022/07/28/C-Day5/"/>
      <url>/2022/07/28/C-Day5/</url>
      
        <content type="html"><![CDATA[<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p><strong>转义字符就是转变其原来的意思</strong></p><p>这里有一个转义的图表可以参考一下</p><table><thead><tr><th>转义字符</th><th>意义</th><th>ASCII码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>响铃(BEL)</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td>\n</td><td>换行(LF) ，将当前位置移到下一行开头</td><td>010</td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td>\t</td><td>水平制表(HT) （跳到下一个TAB位置）</td><td>009</td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td>\</td><td>代表一个反斜线字符’’&#39;</td><td>092</td></tr><tr><td>&#39;</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>&quot;</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>空字符(NUL)</td><td>000</td></tr><tr><td>\ddd</td><td>1到3位八进制数所代表的任意字符</td><td>三位八进制</td></tr><tr><td>\xhh</td><td>十六进制所代表的任意字符</td><td>十六进制</td></tr></tbody></table><p>那来举一个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C;\test\test.c&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个输出结果会是什么呢</p><p><img src="https://img1.imgtp.com/2022/07/28/D65LPzf1.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/28/D65LPzf1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>再来举两个特殊的例子</p><p><code>\ddd</code>和<code>\xhh</code>，一个是<code>八进制</code>转化一个是<code>十六进制</code>转化，在<code>printf</code>指令中<code>%d</code>可以直接打印出其换算的十进制数，<code>%c</code>可以直接打印出ASCII码所对应的字符</p><p><a href="https://zh.wikipedia.org/wiki/ASCII">ASCII码表</a></p><h2 id="小思考"><a href="#小思考" class="headerlink" title="小思考"></a>小思考</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%D\n&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;C:\test\328\test.c&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个的输出结果是多少？<br>答案是 <code>14</code></p><p>解答</p><p>转义字符带上斜杠只会算作<strong>一个字符</strong>，因此<code>\t</code>算作一个字符</p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>注释是用来解释复杂代码的，可以让<strong>未来的自己看得懂</strong></p><p>注释在c语言中有两种</p><ul><li><code>//</code>c++的注释风格</li><li><code>/* */</code>c语言的注释风格(缺点是不支持嵌套注释)</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day4</title>
      <link href="/2022/07/26/c-Day4/"/>
      <url>/2022/07/26/c-Day4/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p><strong>字符串即一串字符。</strong>单括号括起来的是<strong>字符</strong>，双括号括起来的就是<strong>字符串</strong>。</p><h2 id="如何描述字符串"><a href="#如何描述字符串" class="headerlink" title="如何描述字符串"></a>如何描述字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;abcdef&quot;</span>; <span class="comment">//字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提前需要注意的是，字符串的结束标志是一个<code>\0</code>的转义字符，在计算字符串长度的时候，<code>\0</code>因为是结束的标志，因此不算做字符串的内容</p><h2 id="证明字符串的内容都是字符-与-0算作元素"><a href="#证明字符串的内容都是字符-与-0算作元素" class="headerlink" title="证明字符串的内容都是字符 与 \0算作元素"></a>证明字符串的内容都是字符 与 <code>\0</code>算作元素</h2><p>因为<strong>数组</strong>表示的是一组<strong>相同类型</strong>的<strong>元素</strong>，所以我们在这里可以选择使用字符数组来证明</p><p>首先将字符串存到字符数组中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;abcde&quot;</span>;<span class="comment">//[]不填写，会自动根据后续内容进行初始化</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按下<code>F10</code>进行调试，之后再监视<code>arr</code></p><p><img src="https://img1.imgtp.com/2022/07/27/6VXPkuMM.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/27/6VXPkuMM.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>根据右侧监视的结果我们发现有0~5，一共<strong>6个元素</strong>，是因为字符串在结尾<strong>隐藏了一个<code>\0</code></strong></p><h2 id="0的重要性-与-0是字符串中止的证明"><a href="#0的重要性-与-0是字符串中止的证明" class="headerlink" title="\0的重要性 与 \0是字符串中止的证明"></a><code>\0</code>的重要性 与 <code>\0</code>是字符串中止的证明</h2><p><code>\0</code>的主要作用就是进行一个<strong>终止读取</strong>的作用<del>及时折损</del></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;<span class="comment">//字符串</span></span><br><span class="line">    <span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;<span class="comment">//字符</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr1);<span class="comment">//%s是打印字符串用的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/27/WjJL6Soi.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/27/WjJL6Soi.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>arr1是<strong>正常</strong>的但是arr2出现了乱码是为什么呢？</p><h3 id="乱码"><a href="#乱码" class="headerlink" title="乱码"></a>乱码</h3><p>通过<strong>画图</strong>可以方便我们对<strong>内存空间</strong>进行理解，如下图所示</p><p><img src="https://img1.imgtp.com/2022/07/27/ZxvYEook.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/27/ZxvYEook.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>而出现乱码的原因就是，<strong>由于没有终止符号就会一直读取未知信息，产生乱码</strong></p><p><strong>如何解决呢？</strong>很简单可以在后面直接手动输入一个**<code>\0</code>**</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就不会出现乱码了</p><p>现在已经知道了<code>\0</code>会算作一个元素个数，<strong>那么怎么证明其不算作字符长度呢？</strong></p><h2 id="0不算作字符长度"><a href="#0不算作字符长度" class="headerlink" title="\0不算作字符长度"></a><code>\0</code>不算作字符长度</h2><p>证明之前还是来简单介绍一个新的函数，来辅助证明</p><h3 id="strlen-函数"><a href="#strlen-函数" class="headerlink" title="strlen()函数"></a><code>strlen()</code>函数</h3><p><code>strlen()</code>函数，全称是<strong>string length</strong>，它直接在<code>()</code>内填写，可以求字符串的长度，但是<strong>求完长度后会直接返回</strong></p><p>因此在使用这个函数的时候可以在<strong>前面</strong>打上<code>int len</code>就可以解决</p><p>但是在使用这个函数是会有<strong>头文件</strong>报错，因此还需要在头文件上加上**<code>#include &lt;string.h&gt;</code>**</p><h3 id="回到证明"><a href="#回到证明" class="headerlink" title="回到证明"></a>回到证明</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/27/lLSAlMf0.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/27/lLSAlMf0.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><strong>结果显然</strong>是3，因此足以证明**<code>\0</code>会算作一个元素个数，但其不算作字符长度**</p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>如果要是输入字符会<code>strlen()</code>函数会怎么样？来试验一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, arr2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/27/MA72C07W.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/27/MA72C07W.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>结果如图，这个数字很奇怪，是为什么呢？</p><p>因为<code>strlen()</code>在求算字符长度是，得出的结果是<strong>随机值</strong>，多按几次<code>F5</code>就会发现<strong>每次的结果</strong>都是<strong>不一样</strong>的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day3</title>
      <link href="/2022/07/24/C-Day3/"/>
      <url>/2022/07/24/C-Day3/</url>
      
        <content type="html"><![CDATA[<h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>常量指的是代码中不变的量</p><p><strong>在c语言中常量分为一下几种</strong></p><ul><li>字面常量</li><li>const修饰的常量</li><li>#define定义的标识符常量</li><li>枚举常量</li></ul><h2 id="字面常量"><a href="#字面常量" class="headerlink" title="字面常量"></a>字面常量</h2><p>字面常量大体包括以下几种</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">3.14</span>;<span class="comment">//浮点型常量</span></span><br><span class="line">    <span class="number">10</span>;<span class="comment">//整型常量</span></span><br><span class="line">    <span class="string">&#x27;a&#x27;</span>;<span class="comment">//字符常量</span></span><br><span class="line">    <span class="string">&quot;abcdef&quot;</span>;<span class="comment">//字符串常量</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="const修饰的常变量"><a href="#const修饰的常变量" class="headerlink" title="const修饰的常变量"></a><code>const</code>修饰的常变量</h2><p>在介绍const修饰的常变量之前，先来了解一下<strong>常变量</strong></p><h3 id="常变量"><a href="#常变量" class="headerlink" title="常变量"></a>常变量</h3><p>常变量是一个具有常属性（不可被改变的属性）的变量</p><p>首先看一下变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    num = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num = %d\n&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/24/indcyr4M.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/24/indcyr4M.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>结果很显然是10</p><p><strong>那么常变量会是怎么样呢？</strong></p><p>在说常变量之前，先引出数组</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>C语言中的数组初始化是有三种形式的，分别是：</p><ol><li>数据类型 数组名称[长度n] &#x3D; {元素1,元素2…元素n};</li><li>数据类型 数组名称[] &#x3D; {元素1,元素2…元素n};</li><li>数据类型 数组名称[长度n]; 数组名称[0] &#x3D; 元素1; 数组名称[1] &#x3D; 元素2; 数组名称[n-1] &#x3D; 元素n;</li></ol><p><strong>大括号内进行初始化，方括号内一定为常量</strong></p><p>例如：初始化一个数组 int arr[3] &#x3D; {1,2,3}; 那么arr[0]就是元素1</p><p>值得注意的是</p><blockquote><ol><li>数组的下标均以0开始；</li><li>数组在初始化的时候，数组内元素的个数不能大于声明的数组长度；</li><li>如果采用第一种初始化方式，元素个数小于数组的长度时，多余的数组元素初始化为0；</li><li>在声明数组后没有进行初始化的时候，静态(static)和外部(extern)类型的数组元素初始化元素为0，自动(auto)类型的数组的元素初始化值不确定。</li></ol></blockquote><h3 id="回到常变量"><a href="#回到常变量" class="headerlink" title="回到常变量"></a>回到常变量</h3><p>先来说明他具有常量的性质</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> num = <span class="number">1</span>;<span class="comment">//num从变量变成常变量</span></span><br><span class="line">    num = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num = %d\n&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/24/4gi5iPuW.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/24/4gi5iPuW.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>从结果上告诉了我们，常变量是具有常属性的</p><p><strong>如何说明常变量，本质上是变量呢？那么就需要提到刚才说到的数组了</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//int arr[n] = &#123;o&#125;;//这行代码不行，因为n是变量而非常量</span></span><br><span class="line">    <span class="comment">//那换成const修饰的常变量呢</span></span><br><span class="line">    <span class="type">const</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> arr2[n] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/24/YhfniXz8.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/24/YhfniXz8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>因此我们可以得出结论常变量是具有常属性的变量</p><h2 id="define定义的标识符常量"><a href="#define定义的标识符常量" class="headerlink" title="#define定义的标识符常量"></a><code>#define</code>定义的标识符常量</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 10000</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mian</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//MAX = 20000 //err 不可更改</span></span><br><span class="line">    <span class="type">int</span> M =MAX;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;M = %d\n&quot;</span>, M);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举常量"><a href="#枚举常量" class="headerlink" title="枚举常量"></a>枚举常量</h2><p><strong>枚举常量指的是一一可以列举的常量</strong></p><p>例如：性别，血型等等</p><p>枚举变量需要提前进行定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">SEX</span>  //在这里可以列举出枚举变量未来的可能取值</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MALE,</span><br><span class="line">    FEMALE,</span><br><span class="line">    SECRET</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">SEX</span> <span class="title">s</span> =</span> MALE;</span><br><span class="line">    <span class="comment">//enum SEX s = boy;//err，因为定义时没有给予‘boy’的可能取值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, MALE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, FEMALE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, SECRET);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/24/RnlZKOAQ.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/24/RnlZKOAQ.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>因此枚举常量是从0开始的常量，<strong>那么它可以被更改吗？</strong>来试一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">SEX</span>  //在这里可以列举出枚举变量未来的可能取值</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MALE = <span class="number">3</span>,<span class="comment">//可以在这里修改</span></span><br><span class="line">    FEMALE,</span><br><span class="line">    SECRET</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">SEX</span> <span class="title">s</span> =</span> MALE;</span><br><span class="line">    <span class="comment">//MALE = 3;//err 不能在这里修改</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, MALE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, FEMALE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, SECRET);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/24/srGRpV32.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/24/srGRpV32.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>好修改成功了，与数组的更改后效果一致</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day2</title>
      <link href="/2022/07/23/C-Day2/"/>
      <url>/2022/07/23/C-Day2/</url>
      
        <content type="html"><![CDATA[<h1 id="初始变量的作用域和生命周期"><a href="#初始变量的作用域和生命周期" class="headerlink" title="初始变量的作用域和生命周期"></a>初始变量的作用域和生命周期</h1><h2 id="作用域-scope"><a href="#作用域-scope" class="headerlink" title="作用域(scope)"></a>作用域(scope)</h2><blockquote><p>作用域是程序设计的概念，通常来说，一般程序的代码中所用到的名字并不总是有效或者可用的。而先动这个名字的可用性的代码范围就是这个名字的作用域。</p></blockquote><p>简而言之，<strong>一个变量在哪里可以使用，则哪里就是它的可用域。（就是自己所在的大括号内）</strong></p><h3 id="局部变量的可用域：即变量所在的局部范围"><a href="#局部变量的可用域：即变量所在的局部范围" class="headerlink" title="局部变量的可用域：即变量所在的局部范围"></a>局部变量的可用域：即变量所在的局部范围</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/R2nSVARG.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/R2nSVARG.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/wWym2Dtv.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/wWym2Dtv.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/y4gtjL2L.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/y4gtjL2L.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>从上面三个例子可以看到，只有当<code>printf</code>与要打印的<code>变量a</code>同时在一个打括号内，才会起作用。</p><h3 id="全局变量的作用域：是整个工程"><a href="#全局变量的作用域：是整个工程" class="headerlink" title="全局变量的作用域：是整个工程"></a>全局变量的作用域：是整个工程</h3><p>举个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> global = <span class="number">2022</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1:%d\n&quot;</span>,global);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;mozi\n&quot;</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2:%d\n&quot;</span>,global);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3:%d\n&quot;</span>,global);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/UzZpPHGH.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/UzZpPHGH.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>根据上面的结果我们得知，<code>全局变量</code>可以在该源文件的任意一个位置得以调用</p><p><strong>那么已经说了全局变量的作用域是整个工程，那我再新建一个源文件谁不是也可以调用出来？</strong></p><p>那就来试验一下</p><p><img src="https://img1.imgtp.com/2022/07/23/3WEymrea.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/3WEymrea.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><strong>结果告诉我们不可以直接调用，那有没有什么方法可以调用出来呢？</strong></p><p>答案是用的，在调用另一个源文件的全局变量之前，我们要<strong>声明</strong>一下所需要调用的<code>全局变量</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> global</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/xKEWsA6a.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/xKEWsA6a.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>好现在就成功了</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>一个生物的生命周期是其从出生到死亡的时间段</p><p>而<strong>一个变量的生命周期是其从创建到销毁的时间段</strong></p><h3 id="局部变量的生命周期"><a href="#局部变量的生命周期" class="headerlink" title="局部变量的生命周期"></a>局部变量的生命周期</h3><p><strong>局部变量的生命周期是进入局部范围开始，离开局部范围结束</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;       <span class="comment">//创建</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    &#125;                     <span class="comment">//销毁</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局变量的生命周期"><a href="#全局变量的生命周期" class="headerlink" title="全局变量的生命周期"></a>全局变量的生命周期</h3><p><strong>全局变量的生命周期是整个程序的生命周期9</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>作业-第一课</title>
      <link href="/2022/07/21/homework-Lesson-1/"/>
      <url>/2022/07/21/homework-Lesson-1/</url>
      
        <content type="html"><![CDATA[<h1 id="BC6-小飞机"><a href="#BC6-小飞机" class="headerlink" title="BC6-小飞机"></a><a href="https://www.nowcoder.com/practice/5cd9598f28f74521805d2069ce4a108a?tpId=107&&tqId=33287&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC6-小飞机</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;     **\n     **\n************\n************\n    *  *\n    *  *\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p><img src="https://img1.imgtp.com/2022/07/21/NakQI11s.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/21/NakQI11s.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 id="BC84-计算Y的值"><a href="#BC84-计算Y的值" class="headerlink" title="BC84-计算Y的值"></a><a href="https://www.nowcoder.com/practice/61a0f16117484d219b59c62224b33b1c?tpId=107&&tqId=33365&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC84-计算Y的值</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x , y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x&gt;<span class="number">0</span>) y=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x==<span class="number">0</span>) y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> y=<span class="number">1</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC83-被5整除的问题"><a href="#BC83-被5整除的问题" class="headerlink" title="BC83-被5整除的问题"></a><a href="https://www.nowcoder.com/practice/a4f527b043c04551bf4b80b4275a53bd?tpId=107&&tqId=33364&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC83-被5整除的问题</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> M;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">    <span class="keyword">if</span>(M%<span class="number">5</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day1</title>
      <link href="/2022/07/15/C-Day1/"/>
      <url>/2022/07/15/C-Day1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一个C语言项目"><a href="#第一个C语言项目" class="headerlink" title="第一个C语言项目"></a>第一个C语言项目</h2><h3 id="使用工具：VS2022社区版"><a href="#使用工具：VS2022社区版" class="headerlink" title="使用工具：VS2022社区版"></a>使用工具：VS2022社区版</h3><h4 id="printf-打印与-mian-函数"><a href="#printf-打印与-mian-函数" class="headerlink" title="printf  打印与 mian() 函数"></a>printf  打印与 mian() 函数</h4><p><strong>小试牛刀</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="number">100</span>);<span class="comment">//%d-打印出一个整数</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Ctrl+F5 运行</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><h4 id="有关main-函数"><a href="#有关main-函数" class="headerlink" title="有关main()函数"></a>有关main()函数</h4><p><code>main()</code>函数是程序的入口，有且只有一个</p><p>一个工程中可以有多个<code>.c</code>文件，但是多个<code>.c</code>文件中只能有一个<code>main</code>函数。</p><h2 id="初识数据类型"><a href="#初识数据类型" class="headerlink" title="初识数据类型"></a>初识数据类型</h2><p><strong>那么何为数据类型？又分为几种？意义是什么？大小又是多少呢？</strong></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>数据类型，其实在我们生活中经常被使用，但是在编程语言中被重新定义了一下，并且加入了一些新的知识</p><p><strong>数据类型 &#x3D; 一类数 + 这类数可以执行的操作</strong></p><p>其中的一类数：指的就是我们数学中的整数，小数等，但是在C语言中分别叫做整型数据，浮点数</p><p><strong>当然，C语言不是全部使用数学中的数据类型</strong> </p><p>这类数可以执行的操作：指的是一个类型的数据可以执行哪些操作，比如：整形数据我们可以进行加减乘除，字符型数据却不可以。当然可以通过某种方法实现 </p><h3 id="C语言中有哪些数据类型？"><a href="#C语言中有哪些数据类型？" class="headerlink" title="C语言中有哪些数据类型？"></a>C语言中有哪些数据类型？</h3><table><thead><tr><th>实际代码</th><th>表示内容</th></tr></thead><tbody><tr><td>char</td><td>字符数据类型</td></tr><tr><td>short</td><td>短整型</td></tr><tr><td>int</td><td>整型</td></tr><tr><td>long</td><td>长整型</td></tr><tr><td>long long</td><td>更长的整型</td></tr><tr><td>float</td><td>单精度浮点数</td></tr><tr><td>double</td><td>双精度浮点数</td></tr></tbody></table><h4 id="实际运用"><a href="#实际运用" class="headerlink" title="实际运用"></a>实际运用</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符类型</span></span><br><span class="line"><span class="type">char</span> name =<span class="string">&quot;qianbimo&quot;</span>;</span><br><span class="line"><span class="comment">//整型</span></span><br><span class="line"><span class="type">int</span> age = <span class="number">18</span>；</span><br><span class="line"><span class="comment">//短整型</span></span><br><span class="line"><span class="type">short</span> num = <span class="number">10</span>；</span><br><span class="line"><span class="comment">//长整型</span></span><br><span class="line"><span class="type">long</span> road = <span class="number">114514</span></span><br><span class="line"><span class="comment">//更长的整形</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> b = <span class="number">123456</span></span><br><span class="line"><span class="comment">//单精度浮点数</span></span><br><span class="line"> <span class="type">float</span> weight = <span class="number">55.5</span></span><br><span class="line"><span class="comment">//双精度浮点数</span></span><br><span class="line"> <span class="type">double</span> d = <span class="number">0.0</span></span><br></pre></td></tr></table></figure><h3 id="分这么多类型的意义是什么呢？"><a href="#分这么多类型的意义是什么呢？" class="headerlink" title="分这么多类型的意义是什么呢？"></a>分这么多类型的意义是什么呢？</h3><p>因为对于编程语言来说，许多数据都是人为设定的，我们输入这些数据到计算机中之后，如果我们事先不让计算机知道某一个数据的长度是多少，那么计算机就不知道应该如何处理长度，所以就会产生错误</p><p><strong>因此，用不同数据类型在内存中占用的存储长度不同，将数据类型进行分类</strong></p><p>这样的好处就是，我们事先让计算机知道了这个数据是什么类型，并且由于每一个数据类型的长度，都是固定好的，这样计算机处理的时候就会按照一定的长度去选数据</p><h3 id="不同数据类型的空间大小是多少？"><a href="#不同数据类型的空间大小是多少？" class="headerlink" title="不同数据类型的空间大小是多少？"></a>不同数据类型的空间大小是多少？</h3><h4 id="操作符-sizeof"><a href="#操作符-sizeof" class="headerlink" title="操作符 sizeof"></a>操作符 sizeof</h4><h5 id="sizeof的使用"><a href="#sizeof的使用" class="headerlink" title="sizeof的使用"></a>sizeof的使用</h5><p>在实现展示数据类型大小之前，首先我们先来引进一个新的操作符——<code>sizeof</code></p><p><code>sizeof</code>是一个操作符，其主要功能是计算<code>类型</code>或者<code>变量</code>所占空间的大小</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">short</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后的输出结果</p><img src="https://img1.imgtp.com/2022/07/15/PHEhVQwS.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/PHEhVQwS.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"  /><p>但是结果并没有单位，不能让我们直观的感受到它的大小，那么问题来了，结果所隐含的单位是什么呢？</p><h5 id="sizeof-的单位"><a href="#sizeof-的单位" class="headerlink" title="sizeof 的单位"></a>sizeof 的单位</h5><p>sizeof 的单位是计算机中常见的单位——字节<code>Byte</code></p><h5 id="计算机中最小的单位"><a href="#计算机中最小的单位" class="headerlink" title="计算机中最小的单位"></a>计算机中最小的单位</h5><p>作为常识我们知道计算机识别的是二进制即<code>1,0</code></p><p>而<code>1</code>所占用的空间大小为1Bit，<code>0</code>所占用的空间大小为0Bit</p><p>所以我们得知<code>Bit</code>就是计算机中最小的单位</p><h5 id="常见的计算机单位的换算"><a href="#常见的计算机单位的换算" class="headerlink" title="常见的计算机单位的换算"></a>常见的计算机单位的换算</h5><blockquote><p>1Byte&#x3D;8Bit</p><p>1Kb&#x3D;1024Byte</p><p>1Mb&#x3D;1024Kb</p><p>1Gb&#x3D;1024Mb</p><p>1Tb&#x3D;1024Gb</p><p>1Pb&#x3D;1024Tb</p></blockquote><h4 id="不同数据类型的空间大小"><a href="#不同数据类型的空间大小" class="headerlink" title="不同数据类型的空间大小"></a>不同数据类型的空间大小</h4><p>根据上面知识的学习我们已经可以了解到，输出结果的单位为<code>Byte</code></p><p>那么数据类型的实际大小为：</p><table><thead><tr><th>实际代码</th><th>实际大小&#x2F;Btye</th></tr></thead><tbody><tr><td>char</td><td>1</td></tr><tr><td>short</td><td>2</td></tr><tr><td>int</td><td>4</td></tr><tr><td>long</td><td>4</td></tr><tr><td>long long</td><td>8</td></tr><tr><td>float</td><td>4</td></tr><tr><td>double</td><td>8</td></tr></tbody></table><p>产生大小的概念之后，我们发现<code>short</code>短整型的大小为2<code>Bit</code>可以理解，<strong>但是<code>long</code>长整型为什么没有<code>int</code>整型长呢？</strong></p><blockquote><p>那是因为在C语言的标准中 sizeof(long)&gt;&#x3D;sizeof(int)</p></blockquote><h2 id="初识常量变量"><a href="#初识常量变量" class="headerlink" title="初识常量变量"></a>初识常量变量</h2><p>在上面的学习中已经了解到，不同的数字类型可以表示不同的东西，例如：字符用<code>char</code>，数据可以选择用<code>int</code></p><p>在我们的日常生活中也有许多的数据，他们大体可以分为两类：一种是<code>不可变的数据</code>，另一种是<code>一定可变的数据</code>。前者像，血型，性别等等，后者例如，工资，年龄体重，而在c语言当中这两种数据分别被称为：<code>常量和变量</code></p><blockquote><p><strong>常量&#x3D;不可改变的量</strong></p><p><strong>变量&#x3D;能被改变的量</strong></p></blockquote><h3 id="定义变量的方法"><a href="#定义变量的方法" class="headerlink" title="定义变量的方法"></a>定义变量的方法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建一个变量</span></span><br><span class="line">  <span class="comment">//类型 变量 = 赋值 或者 类型 变量（不推荐）</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="type">double</span> weight = <span class="number">55.5</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的初步应用"><a href="#变量的初步应用" class="headerlink" title="变量的初步应用"></a>变量的初步应用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="type">double</span> weight = <span class="number">55.5</span>;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, age);</span><br><span class="line">    weight = weight - <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, weight);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展：不同的数据类型打印用不同的<code>%</code>来表示</p><blockquote><p>int-%d</p><p>float-%lf</p><p>double-%f</p></blockquote><h3 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h3><ul><li>局部变量</li><li>全局变量</li></ul><p>局部变量：在大括号内定义的变量</p><p>全局变量：在大括号外定义的变量 </p><p>为了更好的理解举个例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局变量 - &#123;&#125;外部定义的变量</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//局部变量 - &#123;&#125;内部定义的变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>但是此时输出的结果会是什么呢？10or100？</strong></p><p><strong><img src="https://img1.imgtp.com/2022/07/15/bkhzS6TV.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/bkhzS6TV.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></strong></p><p> 很显然结果是<strong>10</strong>但是为什么呢？</p><p>是因为在C语言中：<strong>当全局变量与局部变量名称冲突时，局部变量优先。</strong>因此我们不建议把全局变量和局部变量名字写成一样</p><h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><h4 id="scanf-函数"><a href="#scanf-函数" class="headerlink" title="scanf() 函数"></a>scanf() 函数</h4><p>在使用变量的时候，我们又要引进一个新的函数——<code>scanf()</code> 函数</p><p><code>scanf()</code>函数是一个输入函数</p><h5 id="scanf-函数的使用"><a href="#scanf-函数的使用" class="headerlink" title="scanf()函数的使用"></a>scanf()函数的使用</h5><p>我们可以来写一个代码求两个整数的和，来具体感受一下<code>scanf()</code>函数的具体表达</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a, &amp;b);</span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是当我们直接运行时可能会出现报错</p><h5 id="scanf-函数报错的解决办法"><a href="#scanf-函数报错的解决办法" class="headerlink" title="scanf()函数报错的解决办法"></a>scanf()函数报错的解决办法</h5><p><img src="https://img1.imgtp.com/2022/07/15/owP18ZMm.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/owP18ZMm.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>当我们使用VS编译器的时候，<code>scanf()</code>函数报错是正常现象。官方已经给了我们解决方式</p><ul><li>在源文件的第一行中添加<code>#define CRT_SECURE_NO_WARNINGS 1</code> <strong>(推荐)</strong></li><li>使用<code>scanf_s()</code>函数来替换<code>scanf()</code>函数 <strong>(不推荐)</strong></li></ul><h5 id="那么为什么不推荐scanf-s-函数呢？"><a href="#那么为什么不推荐scanf-s-函数呢？" class="headerlink" title="那么为什么不推荐scanf_s()函数呢？"></a>那么为什么不推荐<code>scanf_s()</code>函数呢？</h5><p>是因为<code>scanf_s()</code>函数并不是c语言中所规定的标准，而是由VS编译器自己提供创造的。使用<code>scanf_s()</code>函数可能会导致在分享代码时，他人使用的是非VS编译器就会导致整个函数报错。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个博客</title>
      <link href="/2022/07/11/hello-world/"/>
      <url>/2022/07/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>正如标题所见，这是我梦开始的地方。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
