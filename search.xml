<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言 Day2</title>
      <link href="/2022/07/23/C-Day2/"/>
      <url>/2022/07/23/C-Day2/</url>
      
        <content type="html"><![CDATA[<h1 id="初始变量的作用域和生命周期"><a href="#初始变量的作用域和生命周期" class="headerlink" title="初始变量的作用域和生命周期"></a>初始变量的作用域和生命周期</h1><h2 id="作用域-scope"><a href="#作用域-scope" class="headerlink" title="作用域(scope)"></a>作用域(scope)</h2><blockquote><p>作用域是程序设计的概念，通常来说，一般程序的代码中所用到的名字并不总是有效或者可用的。而先动这个名字的可用性的代码范围就是这个名字的作用域。</p></blockquote><p>简而言之，<strong>一个变量在哪里可以使用，则哪里就是它的可用域。（就是自己所在的大括号内）</strong></p><h3 id="局部变量的可用域：即变量所在的局部范围"><a href="#局部变量的可用域：即变量所在的局部范围" class="headerlink" title="局部变量的可用域：即变量所在的局部范围"></a>局部变量的可用域：即变量所在的局部范围</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/R2nSVARG.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/R2nSVARG.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/wWym2Dtv.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/wWym2Dtv.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/y4gtjL2L.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/y4gtjL2L.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>从上面三个例子可以看到，只有当<code>printf</code>与要打印的<code>变量a</code>同时在一个打括号内，才会起作用。</p><h3 id="全局变量的作用域：是整个工程"><a href="#全局变量的作用域：是整个工程" class="headerlink" title="全局变量的作用域：是整个工程"></a>全局变量的作用域：是整个工程</h3><p>举个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> global = <span class="number">2022</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1:%d\n&quot;</span>,global);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;mozi\n&quot;</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>, a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2:%d\n&quot;</span>,global);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3:%d\n&quot;</span>,global);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/UzZpPHGH.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/UzZpPHGH.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>根据上面的结果我们得知，<code>全局变量</code>可以在该源文件的任意一个位置得以调用</p><p><strong>那么已经说了全局变量的作用域是整个工程，那我再新建一个源文件谁不是也可以调用出来？</strong></p><p>那就来试验一下</p><p><img src="https://img1.imgtp.com/2022/07/23/3WEymrea.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/3WEymrea.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><strong>结果告诉我们不可以直接调用，那有没有什么方法可以调用出来呢？</strong></p><p>答案是用的，在调用另一个源文件的全局变量之前，我们要<strong>声明</strong>一下所需要调用的<code>全局变量</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> global</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2022/07/23/xKEWsA6a.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/23/xKEWsA6a.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>好现在就成功了</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>一个生物的生命周期是其从出生到死亡的时间段</p><p>而<strong>一个变量的生命周期是其从创建到销毁的时间段</strong></p><h3 id="局部变量的生命周期"><a href="#局部变量的生命周期" class="headerlink" title="局部变量的生命周期"></a>局部变量的生命周期</h3><p><strong>局部变量的生命周期是进入局部范围开始，离开局部范围结束</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;       <span class="comment">//创建</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    &#125;                     <span class="comment">//销毁</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局变量的生命周期"><a href="#全局变量的生命周期" class="headerlink" title="全局变量的生命周期"></a>全局变量的生命周期</h3><p><strong>全局变量的生命周期是整个程序的生命周期9</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>作业-第一课</title>
      <link href="/2022/07/21/homework-Lesson-1/"/>
      <url>/2022/07/21/homework-Lesson-1/</url>
      
        <content type="html"><![CDATA[<h1 id="BC6-小飞机"><a href="#BC6-小飞机" class="headerlink" title="BC6 小飞机"></a><a href="https://www.nowcoder.com/practice/5cd9598f28f74521805d2069ce4a108a?tpId=107&&tqId=33287&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC6 小飞机</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;     **\n     **\n************\n************\n    *  *\n    *  *\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p><img src="https://img1.imgtp.com/2022/07/21/NakQI11s.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/21/NakQI11s.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 id="BC84-计算Y的值"><a href="#BC84-计算Y的值" class="headerlink" title="BC84-计算Y的值"></a><a href="https://www.nowcoder.com/practice/61a0f16117484d219b59c62224b33b1c?tpId=107&&tqId=33365&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC84-计算Y的值</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x , y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x&gt;<span class="number">0</span>) y=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x==<span class="number">0</span>) y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> y=<span class="number">1</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BC83-被5整除的问题"><a href="#BC83-被5整除的问题" class="headerlink" title="BC83-被5整除的问题"></a><a href="https://www.nowcoder.com/practice/a4f527b043c04551bf4b80b4275a53bd?tpId=107&&tqId=33364&rp=1&ru=/ta/beginner-programmers&qru=/ta/beginner-programmers/question-ranking">BC83-被5整除的问题</a></h1><p>输入代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> M;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">    <span class="keyword">if</span>(M%<span class="number">5</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言 Day1</title>
      <link href="/2022/07/15/C-Day1/"/>
      <url>/2022/07/15/C-Day1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一个C语言项目"><a href="#第一个C语言项目" class="headerlink" title="第一个C语言项目"></a>第一个C语言项目</h2><h3 id="使用工具：VS2022社区版"><a href="#使用工具：VS2022社区版" class="headerlink" title="使用工具：VS2022社区版"></a>使用工具：VS2022社区版</h3><h4 id="printf-打印与-mian-函数"><a href="#printf-打印与-mian-函数" class="headerlink" title="printf  打印与 mian() 函数"></a>printf  打印与 mian() 函数</h4><p><strong>小试牛刀</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="number">100</span>);<span class="comment">//%d-打印出一个整数</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Ctrl+F5 运行</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><h4 id="有关main-函数"><a href="#有关main-函数" class="headerlink" title="有关main()函数"></a>有关main()函数</h4><p><code>main()</code>函数是程序的入口，有且只有一个</p><p>一个工程中可以有多个<code>.c</code>文件，但是多个<code>.c</code>文件中只能有一个<code>main</code>函数。</p><h2 id="初识数据类型"><a href="#初识数据类型" class="headerlink" title="初识数据类型"></a>初识数据类型</h2><p><strong>那么何为数据类型？又分为几种？意义是什么？大小又是多少呢？</strong></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>数据类型，其实在我们生活中经常被使用，但是在编程语言中被重新定义了一下，并且加入了一些新的知识</p><p><strong>数据类型 &#x3D; 一类数 + 这类数可以执行的操作</strong></p><p>其中的一类数：指的就是我们数学中的整数，小数等，但是在C语言中分别叫做整型数据，浮点数</p><p><strong>当然，C语言不是全部使用数学中的数据类型</strong> </p><p>这类数可以执行的操作：指的是一个类型的数据可以执行哪些操作，比如：整形数据我们可以进行加减乘除，字符型数据却不可以。当然可以通过某种方法实现 </p><h3 id="C语言中有哪些数据类型？"><a href="#C语言中有哪些数据类型？" class="headerlink" title="C语言中有哪些数据类型？"></a>C语言中有哪些数据类型？</h3><table><thead><tr><th>实际代码</th><th>表示内容</th></tr></thead><tbody><tr><td>char</td><td>字符数据类型</td></tr><tr><td>short</td><td>短整型</td></tr><tr><td>int</td><td>整型</td></tr><tr><td>long</td><td>长整型</td></tr><tr><td>long long</td><td>更长的整型</td></tr><tr><td>float</td><td>单精度浮点数</td></tr><tr><td>double</td><td>双精度浮点数</td></tr></tbody></table><h4 id="实际运用"><a href="#实际运用" class="headerlink" title="实际运用"></a>实际运用</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符类型</span></span><br><span class="line"><span class="type">char</span> name =<span class="string">&quot;qianbimo&quot;</span>;</span><br><span class="line"><span class="comment">//整型</span></span><br><span class="line"><span class="type">int</span> age = <span class="number">18</span>；</span><br><span class="line"><span class="comment">//短整型</span></span><br><span class="line"><span class="type">short</span> num = <span class="number">10</span>；</span><br><span class="line"><span class="comment">//长整型</span></span><br><span class="line"><span class="type">long</span> road = <span class="number">114514</span></span><br><span class="line"><span class="comment">//更长的整形</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> b = <span class="number">123456</span></span><br><span class="line"><span class="comment">//单精度浮点数</span></span><br><span class="line"> <span class="type">float</span> weight = <span class="number">55.5</span></span><br><span class="line"><span class="comment">//双精度浮点数</span></span><br><span class="line"> <span class="type">double</span> d = <span class="number">0.0</span></span><br></pre></td></tr></table></figure><h3 id="分这么多类型的意义是什么呢？"><a href="#分这么多类型的意义是什么呢？" class="headerlink" title="分这么多类型的意义是什么呢？"></a>分这么多类型的意义是什么呢？</h3><p>因为对于编程语言来说，许多数据都是人为设定的，我们输入这些数据到计算机中之后，如果我们事先不让计算机知道某一个数据的长度是多少，那么计算机就不知道应该如何处理长度，所以就会产生错误</p><p><strong>因此，用不同数据类型在内存中占用的存储长度不同，将数据类型进行分类</strong></p><p>这样的好处就是，我们事先让计算机知道了这个数据是什么类型，并且由于每一个数据类型的长度，都是固定好的，这样计算机处理的时候就会按照一定的长度去选数据</p><h3 id="不同数据类型的空间大小是多少？"><a href="#不同数据类型的空间大小是多少？" class="headerlink" title="不同数据类型的空间大小是多少？"></a>不同数据类型的空间大小是多少？</h3><h4 id="操作符-sizeof"><a href="#操作符-sizeof" class="headerlink" title="操作符 sizeof"></a>操作符 sizeof</h4><h5 id="sizeof的使用"><a href="#sizeof的使用" class="headerlink" title="sizeof的使用"></a>sizeof的使用</h5><p>在实现展示数据类型大小之前，首先我们先来引进一个新的操作符——<code>sizeof</code></p><p><code>sizeof</code>是一个操作符，其主要功能是计算<code>类型</code>或者<code>变量</code>所占空间的大小</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">short</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后的输出结果</p><img src="https://img1.imgtp.com/2022/07/15/PHEhVQwS.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/PHEhVQwS.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"  /><p>但是结果并没有单位，不能让我们直观的感受到它的大小，那么问题来了，结果所隐含的单位是什么呢？</p><h5 id="sizeof-的单位"><a href="#sizeof-的单位" class="headerlink" title="sizeof 的单位"></a>sizeof 的单位</h5><p>sizeof 的单位是计算机中常见的单位——字节<code>Byte</code></p><h5 id="计算机中最小的单位"><a href="#计算机中最小的单位" class="headerlink" title="计算机中最小的单位"></a>计算机中最小的单位</h5><p>作为常识我们知道计算机识别的是二进制即<code>1,0</code></p><p>而<code>1</code>所占用的空间大小为1Bit，<code>0</code>所占用的空间大小为0Bit</p><p>所以我们得知<code>Bit</code>就是计算机中最小的单位</p><h5 id="常见的计算机单位的换算"><a href="#常见的计算机单位的换算" class="headerlink" title="常见的计算机单位的换算"></a>常见的计算机单位的换算</h5><blockquote><p>1Byte&#x3D;8Bit</p><p>1Kb&#x3D;1024Byte</p><p>1Mb&#x3D;1024Kb</p><p>1Gb&#x3D;1024Mb</p><p>1Tb&#x3D;1024Gb</p><p>1Pb&#x3D;1024Tb</p></blockquote><h4 id="不同数据类型的空间大小"><a href="#不同数据类型的空间大小" class="headerlink" title="不同数据类型的空间大小"></a>不同数据类型的空间大小</h4><p>根据上面知识的学习我们已经可以了解到，输出结果的单位为<code>Byte</code></p><p>那么数据类型的实际大小为：</p><table><thead><tr><th>实际代码</th><th>实际大小&#x2F;Btye</th></tr></thead><tbody><tr><td>char</td><td>1</td></tr><tr><td>short</td><td>2</td></tr><tr><td>int</td><td>4</td></tr><tr><td>long</td><td>4</td></tr><tr><td>long long</td><td>8</td></tr><tr><td>float</td><td>4</td></tr><tr><td>double</td><td>8</td></tr></tbody></table><p>产生大小的概念之后，我们发现<code>short</code>短整型的大小为2<code>Bit</code>可以理解，<strong>但是<code>long</code>长整型为什么没有<code>int</code>整型长呢？</strong></p><blockquote><p>那是因为在C语言的标准中 sizeof(long)&gt;&#x3D;sizeof(int)</p></blockquote><h2 id="初识常量变量"><a href="#初识常量变量" class="headerlink" title="初识常量变量"></a>初识常量变量</h2><p>在上面的学习中已经了解到，不同的数字类型可以表示不同的东西，例如：字符用<code>char</code>，数据可以选择用<code>int</code></p><p>在我们的日常生活中也有许多的数据，他们大体可以分为两类：一种是<code>不可变的数据</code>，另一种是<code>一定可变的数据</code>。前者像，血型，性别等等，后者例如，工资，年龄体重，而在c语言当中这两种数据分别被称为：<code>常量和变量</code></p><blockquote><p><strong>常量&#x3D;不可改变的量</strong></p><p><strong>变量&#x3D;能被改变的量</strong></p></blockquote><h3 id="定义变量的方法"><a href="#定义变量的方法" class="headerlink" title="定义变量的方法"></a>定义变量的方法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建一个变量</span></span><br><span class="line">  <span class="comment">//类型 变量 = 赋值 或者 类型 变量（不推荐）</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="type">double</span> weight = <span class="number">55.5</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的初步应用"><a href="#变量的初步应用" class="headerlink" title="变量的初步应用"></a>变量的初步应用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="type">double</span> weight = <span class="number">55.5</span>;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, age);</span><br><span class="line">    weight = weight - <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, weight);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展：不同的数据类型打印用不同的<code>%</code>来表示</p><blockquote><p>int-%d</p><p>float-%lf</p><p>double-%f</p></blockquote><h3 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h3><ul><li>局部变量</li><li>全局变量</li></ul><p>局部变量：在大括号内定义的变量</p><p>全局变量：在大括号外定义的变量 </p><p>为了更好的理解举个例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局变量 - &#123;&#125;外部定义的变量</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//局部变量 - &#123;&#125;内部定义的变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>但是此时输出的结果会是什么呢？10or100？</strong></p><p><strong><img src="https://img1.imgtp.com/2022/07/15/bkhzS6TV.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/bkhzS6TV.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></strong></p><p> 很显然结果是<strong>10</strong>但是为什么呢？</p><p>是因为在C语言中：<strong>当全局变量与局部变量名称冲突时，局部变量优先。</strong>因此我们不建议把全局变量和局部变量名字写成一样</p><h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><h4 id="scanf-函数"><a href="#scanf-函数" class="headerlink" title="scanf() 函数"></a>scanf() 函数</h4><p>在使用变量的时候，我们又要引进一个新的函数——<code>scanf()</code> 函数</p><p><code>scanf()</code>函数是一个输入函数</p><h5 id="scanf-函数的使用"><a href="#scanf-函数的使用" class="headerlink" title="scanf()函数的使用"></a>scanf()函数的使用</h5><p>我们可以来写一个代码求两个整数的和，来具体感受一下<code>scanf()</code>函数的具体表达</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a, &amp;b);</span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是当我们直接运行时可能会出现报错</p><h5 id="scanf-函数报错的解决办法"><a href="#scanf-函数报错的解决办法" class="headerlink" title="scanf()函数报错的解决办法"></a>scanf()函数报错的解决办法</h5><p><img src="https://img1.imgtp.com/2022/07/15/owP18ZMm.png" class="lazyload placeholder" data-srcset="https://img1.imgtp.com/2022/07/15/owP18ZMm.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>当我们使用VS编译器的时候，<code>scanf()</code>函数报错是正常现象。官方已经给了我们解决方式</p><ul><li>在源文件的第一行中添加<code>#define CRT_SECURE_NO_WARNINGS 1</code> <strong>(推荐)</strong></li><li>使用<code>scanf_s()</code>函数来替换<code>scanf()</code>函数 <strong>(不推荐)</strong></li></ul><h5 id="那么为什么不推荐scanf-s-函数呢？"><a href="#那么为什么不推荐scanf-s-函数呢？" class="headerlink" title="那么为什么不推荐scanf_s()函数呢？"></a>那么为什么不推荐<code>scanf_s()</code>函数呢？</h5><p>是因为<code>scanf_s()</code>函数并不是c语言中所规定的标准，而是由VS编译器自己提供创造的。使用<code>scanf_s()</code>函数可能会导致在分享代码时，他人使用的是非VS编译器就会导致整个函数报错。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个博客</title>
      <link href="/2022/07/11/hello-world/"/>
      <url>/2022/07/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>正如标题所见，这是我梦开始的地方。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
